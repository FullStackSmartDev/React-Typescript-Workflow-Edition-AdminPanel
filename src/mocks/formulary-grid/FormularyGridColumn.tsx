import React from "react";
import { Column } from "../../models/grid.model";
import {
  dateFilters,
  textFilters,
  numberFilters,
} from "../../utils/grid/filters";

// fileType: "FRF",
// datasource: "FRF",
// labelName: "Abacavir Sulfate SOLN 20 MG/ML",
// ddid: "58633",
// rxcui: "242680",
// gpi: "12341234123",
// trademark: "G",

export const getCompareFormularyDrugsListGridColumns: () => Column<any>[] = () => {
  return [
    {
      id: 1,
      position: 1,
      pixelWidth: 30,
      sorter: {},
      textCase: "upper",
      key: "drug",
      displayTitle: "DRUG",
      isFilterable: true,
      dataType: "string",
      enableIntellisense: true,
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 2,
      position: 2,
      sorter: {},
      textCase: "upper",
      key: "tier",
      displayTitle: "Tier",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      enableIntellisense: true,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 3,
      position: 3,
      sorter: {},
      textCase: "upper",
      pixelWidth: 35,
      key: "txCategory",
      displayTitle: "tx category",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      enableIntellisense: true,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 4,
      position: 4,
      sorter: {},
      textCase: "upper",
      key: "paType",
      displayTitle: "pa type",
      isFilterable: true,
      dataType: "string",
      enableIntellisense: true,
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 5,
      position: 5,
      sorter: {},
      textCase: "upper",
      key: "paGroupName",
      displayTitle: "pa group name",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      enableIntellisense: true,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 6,
      position: 6,
      sorter: {},
      textCase: "upper",
      key: "modifiedBy",
      displayTitle: "modified by",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      enableIntellisense: true,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
  ];
};

export const getCompareFormularyViewAllGridColumns: () => Column<any>[] = () => {
  return [
    {
      id: 1,
      position: 1,
      pixelWidth: 30,
      sorter: {},
      textCase: "upper",
      key: "drugName",
      displayTitle: "DRUG NAME",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 2,
      position: 2,
      sorter: {},
      textCase: "upper",
      key: "rxcui",
      displayTitle: "rxcui",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 3,
      position: 3,
      sorter: {},
      textCase: "upper",
      pixelWidth: 35,
      key: "ddid",
      displayTitle: "ddid",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 4,
      position: 4,
      sorter: {},
      textCase: "upper",
      key: "gpi",
      displayTitle: "gpi",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 5,
      position: 5,
      sorter: {},
      textCase: "upper",
      key: "trademark",
      displayTitle: "trademark",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 6,
      position: 6,
      sorter: {},
      textCase: "upper",
      key: "baseTier",
      displayTitle: "base tier",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 7,
      position: 7,
      sorter: {},
      textCase: "upper",
      key: "referenceTier",
      displayTitle: "reference tier",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 8,
      position: 8,
      sorter: {},
      textCase: "upper",
      key: "tierDifference",
      displayTitle: "tier difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 9,
      position: 9,
      sorter: {},
      textCase: "upper",
      key: "referenceCategory",
      displayTitle: "reference category",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 10,
      position: 10,
      sorter: {},
      textCase: "upper",
      key: "categoryDifference",
      displayTitle: "category difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 11,
      position: 11,
      sorter: {},
      textCase: "upper",
      key: "baseClass",
      displayTitle: "base class",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 12,
      position: 12,
      sorter: {},
      textCase: "upper",
      key: "referenceClass",
      displayTitle: "reference class",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 13,
      position: 13,
      sorter: {},
      textCase: "upper",
      key: "classDifference",
      displayTitle: "class difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 14,
      position: 14,
      pixelWidth: 120,
      sorter: {},
      textCase: "upper",
      key: "paGroupDescriptionBase",
      displayTitle: "pa Group Description Base",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 15,
      position: 15,
      pixelWidth: 120,
      sorter: {},
      textCase: "upper",
      key: "paGroupDescriptionReference",
      displayTitle: "pa Group Description Reference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 16,
      position: 16,
      pixelWidth: 120,
      sorter: {},
      textCase: "upper",
      key: "paGroupDescriptionDifference",
      displayTitle: "pa Group Description Difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
  ];
};

export const getCompareNonMcrFormularyViewAllGridColumns: () => Column<any>[] = () => {
  return [
    {
      position: 1,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "drug_label_name",
      displayTitle: "Label Name",
      dataType: "string",
      isFilterable: true,
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 2,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "file_type",
      displayTitle: "File Type",
      isFilterable: false,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 3,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "data_source",
      displayTitle: "Data Source",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 4,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "generic_product_identifier",
      displayTitle: "GPI",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 5,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "drug_descriptor_identifier",
      displayTitle: "DDID",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 6,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "tier_value",
      displayTitle: "Tier",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 7,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "pa_type",
      displayTitle: "PA Type",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 8,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "pa_group_description",
      displayTitle: "PA Group Description",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 9,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "st_type",
      displayTitle: "ST Type",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 10,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "st_group_description",
      displayTitle: "ST Group Description",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 11,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "st_value",
      displayTitle: "ST Value",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 12,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "ql_type",
      displayTitle: "QL Type",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 13,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "ql_days",
      displayTitle: "QL Days",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 14,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "ql_period_of_time",
      displayTitle: "QL Period of Time",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 15,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "ql_quantity",
      displayTitle: "QL Quantity",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 16,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "fills_allowed",
      displayTitle: "Fills Allowed",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 17,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "full_limit_period_of_time",
      displayTitle: "Full Lmt Period of Time",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 18,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_min_ages",
      displayTitle: "AL Min Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 19,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_max_ages",
      displayTitle: "AL Max Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 20,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_min_operators",
      displayTitle: "AL Min Covered Cond",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 21,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_max_operators",
      displayTitle: "AL Max Covered Cond",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 22,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_min_ages",
      displayTitle: "AL Min Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 23,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_max_ages",
      displayTitle: "AL Max Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 24,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_min_operators",
      displayTitle: "AL Min Not Covered Cond",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 25,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_max_operators",
      displayTitle: "AL Max Not Covered Cond",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 26,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_genders",
      displayTitle: "GL Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 27,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_genders",
      displayTitle: "GL Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 28,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_icds",
      displayTitle: "ICDL Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 29,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_icds",
      displayTitle: "ICDL Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 30,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_patient_residences",
      displayTitle: "PR Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 31,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_patient_residences",
      displayTitle: "PR Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 32,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_pharmacy_networks",
      displayTitle: "PN Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 33,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_pharmacy_networks",
      displayTitle: "PN Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 34,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_prescriber_taxonomies",
      displayTitle: "PT Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 35,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_prescriber_taxonomies",
      displayTitle: "PT Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 36,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "covered_place_of_services",
      displayTitle: "POS Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 37,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "not_covered_place_of_services",
      displayTitle: "POS Not Covered",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    },
    {
      position: 38,
      sorter: {},
      textCase: "upper",
      pixelWidth: 900,
      key: "user_defined",
      displayTitle: "User Defined",
      dataType: "string",
      hidden: false,
      isFilterable: true,
      filters: textFilters,
      sortDirections: ["ascend", "descend"],
    }
  ]
};

export const getCompareFormularyVersionHistoryColumn: () => Column<any>[] = () => {
  return [
    {
      id: 1,
      position: 1,
      pixelWidth: 30,
      sorter: {},
      textCase: "upper",
      key: "serviceYear",
      displayTitle: "SERVICE YEAR",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 2,
      position: 2,
      sorter: {},
      textCase: "upper",
      key: "lob",
      displayTitle: "LOB",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 3,
      position: 3,
      sorter: {},
      textCase: "upper",
      pixelWidth: 35,
      key: "formularyName",
      displayTitle: "Formulary Name",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 4,
      position: 4,
      sorter: {},
      textCase: "upper",
      key: "gpi",
      displayTitle: "gpi",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 5,
      position: 5,
      sorter: {},
      textCase: "upper",
      key: "version",
      displayTitle: "Version",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 6,
      position: 6,
      sorter: {},
      textCase: "upper",
      key: "lastUpdated",
      displayTitle: "Last Updated",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 7,
      position: 7,
      sorter: {},
      textCase: "upper",
      key: "status",
      displayTitle: "Status",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 8,
      position: 8,
      sorter: {},
      textCase: "upper",
      key: "effective",
      displayTitle: "Effective",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 9,
      position: 9,
      sorter: {},
      textCase: "upper",
      key: "referenceCategory",
      displayTitle: "reference category",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 10,
      position: 10,
      sorter: {},
      textCase: "upper",
      key: "categoryDifference",
      displayTitle: "category difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 11,
      position: 11,
      sorter: {},
      textCase: "upper",
      key: "baseClass",
      displayTitle: "base class",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 12,
      position: 12,
      sorter: {},
      textCase: "upper",
      key: "referenceClass",
      displayTitle: "reference class",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 13,
      position: 13,
      sorter: {},
      textCase: "upper",
      key: "classDifference",
      displayTitle: "class difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 14,
      position: 14,
      pixelWidth: 120,
      sorter: {},
      textCase: "upper",
      key: "paGroupDescriptionBase",
      displayTitle: "pa Group Description Base",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 15,
      position: 15,
      pixelWidth: 120,
      sorter: {},
      textCase: "upper",
      key: "paGroupDescriptionReference",
      displayTitle: "pa Group Description Reference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
    {
      id: 16,
      position: 16,
      pixelWidth: 120,
      sorter: {},
      textCase: "upper",
      key: "paGroupDescriptionDifference",
      displayTitle: "pa Group Description Difference",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
  ];
};
export const getTierAssignmentGridColumns: () => Column<any>[] = () => {
  return [
    
    {
      id: 1,
      position: 1,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "datasource",
      displayTitle: "DATA SOURCE",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 2,
      position: 2,
      sorter: {},
      textCase: "upper",
      pixelWidth: 35,
      key: "labelName",
      displayTitle: "LABEL NAME",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 3,
      position: 3,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "ddid",
      displayTitle: "DDID",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

  
    {
      id: 4,
      position: 4,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "gpi",
      displayTitle: "GPI",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 5,
      position: 5,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "trademark",
      displayTitle: "TRADEMARK",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
  ];
};
export const getTPACommercialGridData = (): any => {
  return [
    {
      id: 1,
      key: 1,
      datasource: "Medispan",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58633,
      gpi: 12341234123,
      trademark: "G",
    },

    {
      id: 2,
      key: 2,
      datasource: "Medispan",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58634,
      gpi: 12341234345,
      trademark: "G",
    },
    {
      id: 3,
      key: 3,
      datasource: "Medispan",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58635,
      gpi: 12341234657,
      trademark: "G",
    },

    {
      id: 4,
      key: 4,
      datasource: "Medispan",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58636,
      gpi: 12341234987,
      trademark: "G",
    },

    {
      id: 5,
      key: 5,
      datasource: "Medispan",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58637,
      gpi: 123412346792,
      trademark: "G",
    },

    {
      id: 6,
      key: 6,
      datasource: "Medispan",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58635,
      gpi: 12341234927,
      trademark: "G",
    },

    {
      id: 7,
      key: 7,
      datasource: "Medispan",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58637,
      gpi: 12341234802,
      trademark: "G",
    },

    {
      id: 8,
      key: 8,
      datasource: "Medispan",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58638,
      gpi: 12341234937,
      trademark: "G",
    },

    {
      id: 9,
      key: 9,
      datasource: "Medispan",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58639,
      gpi: 12341234838,
      trademark: "G",
    },
  ];
};

export const getTPAtGridData = (): any => {
  return [
    {
      id: 1,
      key: 1,
      datasource: "FRF",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58633,
      gpi: 12341234123,
      trademark: "G",
    },

    {
      id: 2,
      key: 2,
      datasource: "FRF",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58634,
      gpi: 12341234345,
      trademark: "G",
    },
    {
      id: 3,
      key: 3,
      datasource: "FRF",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58635,
      gpi: 12341234657,
      trademark: "G",
    },

    {
      id: 4,
      key: 4,
      datasource: "FRF",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58636,
      gpi: 12341234987,
      trademark: "G",
    },

    {
      id: 5,
      key: 5,
      datasource: "FRF",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58637,
      gpi: 123412346792,
      trademark: "G",
    },

    {
      id: 6,
      key: 6,
      datasource: "FRF",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58635,
      gpi: 12341234927,
      trademark: "G",
    },

    {
      id: 7,
      key: 7,
      datasource: "FRF",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58637,
      gpi: 12341234802,
      trademark: "G",
    },

    {
      id: 8,
      key: 8,
      datasource: "FRF",
      labelName: "Abacair Sulfate Tabs 300 MG",
      ddid: 58638,
      gpi: 12341234937,
      trademark: "G",
    },

    {
      id: 9,
      key: 9,
      datasource: "FRF",
      labelName: "Abacavir Sulfate SOLN 20 MG/ML",
      ddid: 58639,
      gpi: 12341234838,
      trademark: "G",
    },
  ];
};

export const getDrugsPAGridColumns: () => Column<any>[] = () => {
  return [
    
    {
      id: 1,
      position: 1,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "datasource",
      displayTitle: "DATA SOURCE",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 2,
      position: 2,
      sorter: {},
      textCase: "upper",
      pixelWidth: 35,
      key: "labelName",
      displayTitle: "LABEL NAME",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 3,
      position: 3,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "ddid",
      displayTitle: "DDID",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

  
    {
      id: 4,
      position: 4,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "gpi",
      displayTitle: "GPI",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },

    {
      id: 5,
      position: 5,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "trademark",
      displayTitle: "TRADEMARK",
      // dataIndex: "versionForUpdate",
      isFilterable: true,
      dataType: "string",
      filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
    },
  ];
};
export const getFormularyGridColumns: () => Column<any>[] = () => {
  return [
    // {
    //   id: 1,
    //   position: 1,
    //   key: "checkbox",
    //   displayTitle: "",
    //   hidden: false,
    //   render: (checkbox) => (
    //     <>
    //       {checkbox.map((r) => {
    //         return <input type="checkbox" name="record" id="" value={r} />;
    //       })}
    //     </>
    //   ),
    // },
    {
      id: 2,
      position: 2,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 30,
      key: "versionForUpdate",
      displayTitle: "VERSION for UPDATES",
      // dataIndex: "versionForUpdate",
      isFilterable: false,
      dataType: "string",
      //   filters: textFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],

      // render: (versionForUpdate) => (
      //   <>
      //     {versionForUpdate.map((r) => {
      //       return (
      //         <span
      //           style={{
      //             marginLeft: "10px",
      //           }}
      //         >
      //           {r} Hello colum
      //         </span>
      //       );
      //     })}
      //   </>
      // ),
    },
    {
      id: 3,
      position: 3,
      sorter: {},
      textCase: "upper",
      // pixelWidth: 20,
      key: "lastApprovedVersion",
      isFilterable: false,
      showToolTip: false,
      displayTitle: "LAST APPROVED VERSION",
      dataType: "string",
      //   filters: dateFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
      // fixed: "left",
    },
    {
      id: 4,
      position: 4,
      sorter: {},
      textCase: "upper",
      isFilterable: false,
      // pixelWidth: 15,
      key: "formularyId",
      displayTitle: "FORMULARY ID",
      dataType: "string",
      //   filters: dateFilters,
      hidden: false,
      sortDirections: ["ascend", "descend"],
      // fixed: "left",

      showToolTip: false,
    },
    {
      id: 5,
      position: 5,
      textCase: "upper",
      // pixelWidth: 15,
      sorter: {},
      isFilterable: false,
      showToolTip: false,
      key: "formularyName",
      displayTitle: "formulary name",
      //   filters: textFilters,
      dataType: "string",
      hidden: false,
      sortDirections: ["ascend", "descend"],
      // fixed: "left",
    },
    {
      id: 6,
      position: 6,
      textCase: "upper",
      // pixelWidth: 15,
      sorter: {},
      isFilterable: false,
      showToolTip: false,
      key: "contactYear",
      displayTitle: "CONTRACT YEAR",
      //   filters: textFilters,
      dataType: "string",
      hidden: false,
      sortDirections: ["ascend", "descend"],
      // fixed: "left",
    },
    {
      id: 7,
      position: 7,
      textCase: "upper",
      // pixelWidth: 15,
      sorter: {},
      isFilterable: false,
      showToolTip: false,
      key: "formularyType",
      displayTitle: "FORMULARY TYPE",
      //   filters: textFilters,
      dataType: "string",
      hidden: false,
      sortDirections: ["ascend", "descend"],
      // fixed: "left",
    },
  ];
};
